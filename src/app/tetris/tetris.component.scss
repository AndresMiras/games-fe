$defaultWith: calc(100% - 5rem);
$color-primary: rgb(255, 255, 240);
$color-primary-border: rgba(161, 120, 243, 0.65);
$color-secondary: rgb(230, 230, 255);
$color-secondary-border: rgba(25, 118, 210, 0.65);
$boardColor: azure;
* {
  color: #2f254efc;
}

#tetris-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  row-gap: 2rem;
  width: calc(100% - .2em);
  height: calc(100% - .2em);
  padding: .1em;
  background-color: $color-primary;

  .body {
    display: flex;
    align-items: center;
    justify-content: center;
    width: max-content;
    max-width: 100%;
    height: 100%;
    max-height: 80%;

    .game {
      display: flex;
      align-items: flex-start;
      justify-content: space-around;
      column-gap: 1em;
      max-height: 62vmax;
      height: 100%;
      width: 85%;
      padding: 1em;
      border: 2px solid
        linear-gradient(
          to right,
          $color-primary-border,
          $color-secondary-border
        );
      border-radius: 3px;
      box-shadow: 1px -1px 6px 1px rgba(0, 0, 0, 0.5);
      // background: linear-gradient(to bottom, $color-secondary, $color-primary);
      background-color: $color-secondary;
      .previsual {
        height: 100%;
        width: 30%;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: space-between;
        .info-panel {
          display: flex;
          flex-direction: column;
          align-items: center;
          justify-content: center;
          padding: 0;
          width: calc(100% - 0.25em);
          .next {
            width: 80%;
            height: 80%;
            padding: 5px;
            border-radius: 3px;
            border: 2px solid rgba(0, 0, 0, 0.3);
            background-color: $boardColor;
            #next_figure {
              width: 100%;
              border: 0;
            }
          }

          .txt-panel {
            display: flex;
            width: 90%;
          }

          .level,
          .score,
          .lines {
            background-color: rgba(250, 250, 250, 0.982);
            margin: 0.5em 0.35rem 0 0.35em;
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-radius: 3px;
            padding: 0.2em;
          }

          h5 {
            font-size: 15px;
            width: 50px;
            margin: 0;
            font-family: monospace;
          }
          p {
            font-family: monospace;
            font-size: 17px;
            width: fit-content;
            margin: 0;
          }
        }
      }

      .board-frame {
        position: relative;
        margin: 0;
        padding: 0;
        height: 100%;
        width: 100%;
        canvas {
          background-color: $boardColor;
          border: 2px solid rgba(50, 55, 50, 0.3);
          height: 100%;
          width: 100%;
        }
      }

      #game-over {
        animation: opacity ease-in 2s;
        z-index: 100;
        position: absolute;
        top: 0;
        left: 0;
        background-color: rgba(120, 58, 255, 0.2);
        padding: 0.2em;
        height: calc(100% - 0.2em);
        width: calc(100% - 0.2em);
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        .gmo-container {
          width: 5rem;
          h3 {
            overflow: hidden;
            font-family: monospace;
            height: fit-content;
            padding: 0;
            margin: 0;
            right: 0;
            width: 0;
            white-space: nowrap;
            border-right: 0.25em solid #b9a2fa;
            animation: typing 3s steps(38) 1s 1 normal both,
              blink 1s steps(1) infinite;
          }
        }
      }
    }
  }
}

.column {
  flex-direction: column;
  column-gap: 0.5rem;
}

.controls {
  display: flex;
  align-items: center;
  justify-content: flex-end;
  column-gap: 0.5rem;
  row-gap: 0.5rem;
  height: 100%;

  article {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    column-gap: 0.05rem;
    width: 100%;
    button {
      height: 2.5em;
      width: 2.5rem;
      border: none;
      border: 2px outset rgba(0, 0, 0, 0.3);
      border-radius: 3px;
      background-color: rgba(243, 255, 249, 0.08);
    }

    button:hover {
      opacity: 0.65;
      transition: 0.2ms;
      border: 2px solid rgba(0, 0, 0, 0.65);
    }
  }
}

.board-controls {
  margin-top: 2rem;
  justify-content: space-between !important;
  .board-control {
    max-width: 30% !important;
  }
}

.mobile-controls {
  padding: 0.5em 1rem;
  margin-top: 1rem;
  width: 85%;
  display: flex;
  align-items: center;
  justify-content: space-around;
  border: 2px solid
    linear-gradient(to right, $color-primary-border, $color-secondary-border);
  border-radius: 3px;
  box-shadow: 1px -1px 6px 1px rgba(0, 0, 0, 0.5);
  background-color: $color-secondary;
}

.btn-rotate {
  width: 150px !important;
}

@keyframes opacity {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

@keyframes typing {
  from {
    width: 0;
  }
  to {
    width: 100%;
  }
}

@keyframes blink {
  50% {
    border-color: transparent;
  }
}

i {
  font-size: 14px;
  font-style: normal;
  font-weight: 550;
}

$btnSecondSize: 2.05rem;
$btnSVGSize: 70%;

@media only screen and (max-width: 515px) {
  ::ng-deep .btn-rotate {
    height: $btnSecondSize !important;
    width: 4rem;
    svg {
      height: $btnSVGSize;
      width: $btnSVGSize;
    }
  }
  ::ng-deep .btn-control {
    svg {
      height: $btnSVGSize;
      width: $btnSVGSize;
    }
    height: $btnSecondSize !important;
    width: $btnSecondSize !important;
  }
}

@media only screen and (max-width: 420px) {
}

@media only screen and (max-width: 300px) {
  // #board {
  //   max-width: 130px;
  // }
  .board-control {
    max-width: 28%;
  }
  .btn-rotate {
    height: calc($btnSecondSize - .45em) !important;
    width: 4rem !important;
  }
  ::ng-deep .btn-control {
    height: calc($btnSecondSize - .45em) !important;
    width: calc($btnSecondSize - .45em) !important;
  }
}
